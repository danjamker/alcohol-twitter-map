{"ts":1378459479268,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Db = require('mongodb').Db;\nvar Connection = require('mongodb').Connection;\nvar Server = require('mongodb').Server;\nvar BSON = require('mongodb').BSON;\nvar ObjectID = require('mongodb').ObjectID;\nvar MongoClient = require('mongodb').MongoClient;\n\nDataProvider = function(host, port) {\n  //this.db= new Db('hadoopOuput', new Server(host, port, {safe: true}, {auto_reconnect: true}, {}));\n  //this.db.open(function(){});\n  this.db= new Db('geolocations', new Server(\"ds027668.mongolab.com\", 27668, {auto_reconnect: true}, {}));\n  //this.db =  MongoClient.connect(\"mongodb://danjamker:apple@ds027668.mongolab.com:27668/geolocations\", { server: { auto_reconnect: true } })\n  this.db.open(function(err, db){\n    db.authenticate('danjamker', 'apple', function(err, result) {\n      console.log(err)\n    });\n  });\n};\n\nDataProvider.prototype.getCollection = function(callback) {\n  this.db.collection('GraphData', function(error, employee_collection) {\n    if( error ) callback(error);\n    else callback(null, employee_collection);\n  });\n};\n\nDataProvider.prototype.findAll = function(postcode, callback) {\n\tconsole.log(postcode)\n    this.getCollection(function(error, employee_collection) {\n      if( error ) callback(error)\n      else {\n        employee_collection.find({location : postcode}).toArray(function(error, results) {\n          if( error ){\n            console.log(results)\n            console.log(error)\n           callback(error)\n         }\n          else callback(null, results)\n        });\n      }\n    });\n};\n\nexports.DataProvider = DataProvider;\n"]],"start1":0,"start2":0,"length1":0,"length2":1556}]],"length":1556}
